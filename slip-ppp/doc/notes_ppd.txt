https://www.instructables.com/id/Connect-the-Raspberry-Pi-to-network-using-UART/
# This will make a LED attached to the TX blink once
stty -F /dev/ttyUSB0 9600 raw
dd if=/dev/zero of=/dev/ttyUSB0 bs=1000 count=1

sudo apt-get install ppp

UART Convertor             Raspberry PI GPIO
GND ---------------------- GND
TX output pin ------------ RXD pin 10 on GPIO header
RX input pin ------------- TXD pin 8  on GPIO header

git clone https://salsa.debian.org/debian/ppp.git

stty -F /dev/ttyAMA0 raw
pppd /dev/ttyAMA0 115200 10.0.5.2:10.0.5.1 noauth local debug dump defaultroute nocrtscts
-a, --all          print all current settings in human-readable form


cooked        same as brkint ignpar istrip icrnl ixon opost isig
              icanon, eof and eol characters to their default values
-cooked       same as raw

raw           same as -ignbrk -brkint -ignpar -parmrk -inpck -istrip
              -inlcr -igncr -icrnl -ixon -ixoff -icanon -opost
              -isig -iuclc -ixany -imaxbel -xcase min 1 time 0
-raw          same as cooked

sudo pppd --help
pppd version 2.4.7
Usage: pppd [ options ], where options are:
	<device>	Communicate over the named device
	<speed>		Set the baud rate to <speed>
	<loc>:<rem>	Set the local and/or remote interface IP
			addresses.  Either one may be omitted.
	asyncmap <n>	Set the desired async map to hex <n>
	auth		Require authentication from peer
        connect <p>     Invoke shell command <p> to set up the serial line
	crtscts		Use hardware RTS/CTS flow control
	defaultroute	Add default route through interface
	file <f>	Take options from file <f>
	modem		Use modem control lines
	mru <n>		Set MRU value to <n> for negotiation
See pppd(8) for more options.
echo "Starting pppd..."
sudo stty -F /dev/ttyAMA0 raw
sudo stty -F /dev/ttyAMA0 -a
sudo pppd /dev/ttyAMA0 115200 10.0.5.2:10.0.5.1 noauth local debug dump defaultroute nocrtscts persist maxfail 0 holdoff 1

sudo stty -F /dev/ttyUSB0 raw
sudo stty -F /dev/ttyUSB0 -a
mypi3-11
sudo pppd /dev/ttyUSB0 115200 10.0.5.2:10.0.5.1 noauth local debug dump defaultroute nocrtscts persist maxfail 0 holdoff 1

mypi3-1
sudo pppd /dev/ttyUSB0 115200 10.0.5.1:10.0.5.2 noauth local debug dump defaultroute nocrtscts persist maxfail 0 holdoff 1

config.txt
dwc_otg.lpm_enable=0 console=ttyAMA0,115200 kgdboc=ttyAMA0,115200 console=tty1 root=/dev/mmcblk0p2 rootfstype=ext4 elevator=deadline rootwait

mypi3-1

pi@mypi3-1:~ $ Ultibo_Projects/slip-ppp/linux/scripts/ppp-3.1.sh

pi@mypi3-1:~ $ ifconfig ppp0
ppp0: flags=4305<UP,POINTOPOINT,RUNNING,NOARP,MULTICAST>  mtu 1500
        inet 10.0.5.1  netmask 255.255.255.255  destination 10.0.5.2
        ppp  txqueuelen 3  (Point-to-Point Protocol)
        RX packets 4  bytes 62 (62.0 B)
        RX errors 0  dropped 0  overruns 0  frame 0
        TX packets 4  bytes 62 (62.0 B)
        TX errors 0  dropped 0 overruns 0  carrier 0  collisions 0

mypi3-11

devel@mypi3-11:~ $ Ultibo_Projects/slip-ppp/linux/scripts/ppp-3.11.sh

ppp0: flags=4305<UP,POINTOPOINT,RUNNING,NOARP,MULTICAST>  mtu 1500
        inet 10.0.5.2  netmask 255.255.255.255  destination 10.0.5.1
        ppp  txqueuelen 3  (Point-to-Point Protocol)
        RX packets 4  bytes 62 (62.0 B)
        RX errors 0  dropped 0  overruns 0  frame 0
        TX packets 4  bytes 62 (62.0 B)
        TX errors 0  dropped 0 overruns 0  carrier 0  collisions 0
	
Created a ssh key for mypi3-11
Copied the key to user pi on mypi3-1

115200 baud
devel@mypi3-11:~ $ time scp lena_rgb_1024.bmp pi@10.0.5.1:~/
lena_rgb_1024.bmp                             100% 3072KB  10.9KB/s   04:41    

real	4m42.804s
user	0m0.976s
sys	0m0.573s
Tested that the image transferred successful.
Repeated the test of transferring lena_rgb_1024.bmp 
time scp lena_rgb_1024.bmp pi@10.0.5.1:~/

230400 baud 
devel@mypi3-11:~ $ time scp lena_rgb_1024.bmp pi@10.0.5.1:~/
lena_rgb_1024.bmp                             100% 3072KB  21.9KB/s   02:20    

real	2m22.298s
user	0m0.989s
sys	0m0.678s 
Tested that the image transferred successful.

1M baud
devel@mypi3-11:~ $ time scp lena_rgb_1024.bmp pi@10.0.5.1:~/
lena_rgb_1024.bmp                             100% 3072KB  80.7KB/s   00:38    

real	0m39.651s
user	0m0.929s
sys	0m0.673s
Tested that the image transferred successful.
devel@mypi3-11:~ $ md5sum lena_rgb_1024.bmp 
5e987f94322785c2f90e63a82ac5b667  lena_rgb_1024.bmp
pi@mypi3-1:~ $ md5sum lena_rgb_1024.bmp 
5e987f94322785c2f90e63a82ac5b667  lena_rgb_1024.bmp

wifi
devel@mypi3-11:~ $ time scp lena_rgb_1024.bmp pi@mypi3-1:~/
lena_rgb_1024.bmp                             100% 3072KB   1.8MB/s   00:01    

real	0m3.036s
user	0m0.511s
sys	0m0.223s

wifi is much more faster than ppp.
devel@mypi3-11:~ $ ifconfig ppp0
ppp0: flags=4305<UP,POINTOPOINT,RUNNING,NOARP,MULTICAST>  mtu 1500
        inet 10.0.5.2  netmask 255.255.255.255  destination 10.0.5.1
        ppp  txqueuelen 3  (Point-to-Point Protocol)
        RX packets 1134  bytes 62853 (61.3 KiB)
        RX errors 0  dropped 0  overruns 0  frame 0
        TX packets 2203  bytes 3267057 (3.1 MiB)
        TX errors 0  dropped 0 overruns 0  carrier 0  collisions 0

devel@mypi3-11:~ $ lsusb
Bus 001 Device 007: ID 0403:6001 Future Technology Devices International, Ltd FT232 Serial (UART) IC

pi@mypi3-1:~ $ lsusb

Bus 001 Device 003: ID 0403:6001 Future Technology Devices International, Ltd FT232 Serial (UART) IC


devel@mypi3-11:~ $ ssh -Y pi@10.0.5.1
Linux mypi3-1 4.19.97+ #1294 Thu Jan 30 13:10:54 GMT 2020 armv6l

The programs included with the Debian GNU/Linux system are free software;
the exact distribution terms for each program are described in the
individual files in /usr/share/doc/*/copyright.

Debian GNU/Linux comes with ABSOLUTELY NO WARRANTY, to the extent
permitted by applicable law.
Last login: Mon Mar 16 05:48:21 2020 from 2600:1700:69f0:42c0::48

devel@mypi3-11:~ $ ssh -Y pi@10.0.5.1
Linux mypi3-1 4.19.97+ #1294 Thu Jan 30 13:10:54 GMT 2020 armv6l

The programs included with the Debian GNU/Linux system are free software;
the exact distribution terms for each program are described in the
individual files in /usr/share/doc/*/copyright.

Debian GNU/Linux comes with ABSOLUTELY NO WARRANTY, to the extent
permitted by applicable law.
Last login: Mon Mar 16 12:39:14 2020 from 10.0.5.2

Setup Routing and NAT		Need to see where these commands should be executed.

First, enable the traffic forwarding:

sudo sysctl -w net.ipv4.ip_forward=1

Next, enable the NAT masquerade to translate Raspi's internal address to the computer's address. Assuming the 'eth0' is an interface on your computer that you use to connect to the outside world:
sudo iptables -t nat -A POSTROUTING -o eth0 -j MASQUERADE


http://read.pudn.com/downloads30/sourcecode/embed/95033/TCPIP%20Lean.pdf
